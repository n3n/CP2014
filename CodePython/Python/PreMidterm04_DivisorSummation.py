# เอา function sqrt มาใช้ 
from math import sqrt
# รับ test case
test = input()
# วนไปจนครบทุก test case
for case in xrange(test):
	# รับจำนวนธรรมชาติบ้าๆนั่นมา
	num = input()
	# นี่คือความจริง
	# ถ้ามันเป็น 1 จะมี divisor summation เป็น 0
	if num == 1:
		print 0
	# ถ้ามันมากกว่า 1 แต่ไม่ถึง 5 จะมี divisor summation เป็น 1
	elif num < 4:
		print 1
	# ข้างบนอะฝอย ของจริงอยู่นี่ :3
	else:
		# ปกติเราจะคิดให้มันวนหารตั้งแต่ 1 ถึงครึ่งนึงของตัวมันเอง เช่น 20 ก็วนหารตั้งแต่ 1 ถึง 10 (เพราะถ้าเกิน 10 แม่งคงหารไม่ลงละ)
		# ทีนี้ มีนักคณิตศาสตร์ว่างงานได้กล่าวไว้ว่า หารเยอะไมเสียเวลาหารถึง sqrt ของจำนวนธรรมชาติบ้าๆนั่นพอ
		
		# ผลรวมตอนแรกเป็น 1 (1 หารไรก็ลงตัว)
		summ = 1
		# เริ่มจาก 2 (ทำไมเหรอ ย้อนไปอ่านข้างบน ^)
		i = 2
		# จบที่รูทของจำนวนบ้าๆนั่น
		end = int(sqrt(num))
		while i <= end:
			# ถ้าหารลง ก็บวกมันเก็บไว้ตอบซะ
			if num % i == 0:
				summ += i
				# ทีนี้นักคณิตศาสตร์ว่างงานคนเมื่อกี้มันยังพูดไม่จบ
				# มันบอกว่า ถ้าตัวที่หารลงยกกำลัง 2 ไม่เท่ากับจำนวนบ้าๆนั่น
				# ให้เอาจำนวนบ้าๆนั่นหารด้วยตัวที่หารลง แล้วเอาไปบวกในผลรวมด้วย
				if i * i != num:
					summ += num / i
			i += 1
		# PPPPPPPPPP
		print summ